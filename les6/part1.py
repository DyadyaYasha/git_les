# Ввод и вывод

'''
Стандартный поток ввода
stdin (№0) -> input()
Стандартный поток вывода
stdout (№1) -> print()
Стандартный поток ошибок
stderr (№2) -> ошибки интерпретатора

В стандартном модуле sys.stdin sys.stdout sys.stderr
'''

# Работа с файлами

'''
open(filename[, mode]) - принимает имя файла(или путь к файлу, от корня до расширения) и режим

Режимы записи

w - перезапись (если файл не существует, то он создаётся, если файл есть то он перезапишется без уведомления)

a - дозапись в конец (если файл не существует, то создаётся, если существует то дописывается (append))

x - эксклюзивное создания файла (если не существует будет создан, если существует будет ошибка)

Режимы чтения

r - чтение (режим по-умолчанию) (Если файл не существует, то выскочит ошибка)
W+, a+, x+ - чтение + запись


====
t - текстовый режим -> open('out.txt', 'wt') (возвращается юникод строка)
b - бинарный режим -> open('1.mp3', 'rb') # запись будет wb, ab, xb (получаем байтовую строку)
'''

# Как открыть файл в режиме запись?

f = open('out.txt', 'w') # относительное имя
# вывод open() - дескриприктор открытого файла
f.write('123\n') # \n - перенос строки
f.write('456')
f.writelines(['C', 'D']) # пока не закрыли файл, поток данных будет его дозаписывать
f.write('\rtest') # \r - вернуть каретку назад
f.close() # закрытие файла

# Как открыть файл в режиме чтения?

f = open('out.txt', 'r')
print('Как прочитать файл в строку целиком?')
content = f.read() # здесь условный курсор в конце файла
print(content)

f.seek(0) # смещение условного курсора в байтах от начала файла

print('Как записать файл в список?')

content = f.readlines()

print(content) 

f.seek(0)

print('Как прочитать файл построчно?')
line = f.readline()
print(line)

for line in f:
    print(line.strip())

f.seek(0)

print('Как прочитать из файла N байтов?')

print(f.read(5)) # курсор сдвигается на 4 байта ()

print('Как узнать позицию курсора?')
print(f.tell())

f.close() # пишем f.close сразу!!!

# Менеджер контекста (нужен для работы с внешним ресурсом, чтобы не было побочных ошибок и файл был закрыт)

with open('out.txt') as f1:
    content1 = f1.read()
    print(content1)

# print(f1)
# print(content1)
