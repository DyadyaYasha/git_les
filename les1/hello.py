"""
Многострочный 
комментарий
"""

'''
Многострочный
комментарий
'''

# Что такое перемкнные?
# PEP8 - как правильно оформлять код

is_student = True

name = input('Введите имя: ')

print('Hello,', name,'!')

# Что такое тип данных? 
# Скалярные типы данных, в одинн момент времени может хранить одно значение

# bool (булева функция) - логический (True, False)
# int (числа) - целочисленные
i1 = 666
i2 = 0x5F # Шеснацатиричная система исчесления
i3 = 0b101010 # Двоичная (бинарная)
i4 = 0o255 # Восьмеричная  

# float - с плавающей точкой
f1 = 1.23
f2 = 12e-3 # (12 * 10 в минус 3 степени)
f3 = 12e3 # 12 * 10 в 3 степени)
# bytes - байтовая строка 
# str - строковые
s1 = 'Some string' # предпочтительнее
s2 = "Some string"
s3 = r'Raw string' # сырая строка (/n никак не будет интерпритироться)
s4 = u'Hello' # юникодная строка (для 2-й версии Python)
s5 = b'bytes string' # строка без кодировки
s6 = '''

''' #перенос строки (равносильно /n)
s7 = """

""" #перенос строки (равносильно /n)

# Комплексные числа - complex
c1 = 3.14j

# Структурированные (сложные, динамические) (в один момент времени может содержать много значений любого типа)
# tuple, list, set, dick, odject
# Кортеж - tuple (круглые скобки)
t1 = (1,) # кортеж из одного элемента
t2 = (True, 1, 1.2, 'String', (1,2,3)) 

# Списки - list [квадратные скобки]
lst1 = [[1], [2], 2, False, ()]

# Множества - set {фигурные скобки} (нельзя обращаться по индексу, но можно перевести в список и обратиться к списку) (элементы не повторяются, остаются только уникальные данные) пустое множество задаётся set()
s1 = {1, 2, 3, ""} # 
s2 = set() # пустое множество
# Обращение к кортежу, списку, к списку внутри списка
print(t2[1], lst1[2], lst1[0][0]) # обращение ко 2-му элементу кортежа

# Словари - dict (порядок не фиксирован)

d = {
    'id': 1, 
    'name': 'Вася',
	'is_student': True,
	'skills': ('python', 'linux')
}

# Специальные типы
# None - пустота

a = None

